{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/http.service\";\nimport * as i2 from \"../../services/notification.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../pipes/parse-location.pipe\";\nfunction WeatherComponent_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 13);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_ul_8_li_1_Template_li_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.selectOption($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"parseLocation\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countryAndState_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, countryAndState_r2), \" \");\n  }\n}\nfunction WeatherComponent_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 11);\n    i0.ɵɵtemplate(1, WeatherComponent_ul_8_li_1_Template, 3, 3, \"li\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.countriesAndStates);\n  }\n}\nclass WeatherComponent {\n  constructor(document, httpService, notificationService) {\n    this.document = document;\n    this.httpService = httpService;\n    this.notificationService = notificationService;\n    this.cityName = '';\n    this.cityCoordinates = {\n      lat: 0,\n      lon: 0\n    };\n    this.countriesAndStates = [];\n    this.coordinates = new EventEmitter();\n    this.days = new EventEmitter();\n    this.toggleDropdown = () => {\n      if (this.countriesAndStates.length > 1) {\n        this.countriesDropdown.classList.toggle('opened');\n      }\n    };\n    this.selectOption = event => {\n      this.countriesInput.value = event.currentTarget.textContent;\n      let city = this.countriesAndStates.find(x => {\n        if (x.state != undefined) return `${x.name}, ${x.state}, ${x.country}` == this.countriesInput.value.trim();else return `${x.name}, ${x.country}` == this.countriesInput.value.trim();\n      });\n      [this.cityCoordinates.lat, this.cityCoordinates.lon] = [city.lat, city.lon];\n    };\n  }\n  ngOnInit() {\n    this.countriesDropdown = this.document.querySelector('.countries-states-dropdown');\n    this.countriesInput = this.document.querySelector('.countries-input');\n    this.countriesOptions = this.document.querySelectorAll('.option');\n  }\n  ngDoCheck() {\n    if (this.cityName.length == 0) {\n      this.resetCoordinatesDropdown();\n    }\n  }\n  getDaysInfo(cityCoordinates) {\n    this.httpService.getWeather(cityCoordinates).subscribe({\n      next: response => {\n        this.weatherInfo = response;\n      },\n      error: error => console.log(error),\n      complete: () => {\n        this.days.emit(this.weatherInfo.list);\n      }\n    });\n  }\n  getWeather() {\n    this.getDaysInfo(this.cityCoordinates);\n    this.coordinates.emit(`${this.cityCoordinates.lat}, ${this.cityCoordinates.lon}`);\n    this.notificationService.showSuccess(`City ${this.cityName} is found`, 'Success');\n  }\n  getCountriesAndStates() {\n    if (this.cityName.length == 0) {\n      this.countriesAndStates = [];\n      this.resetCoordinatesDropdown();\n    } else if (this.cityName.length >= 3) {\n      this.httpService.getCountriesAndStates(this.cityName.toUpperCase()).subscribe({\n        next: response => {\n          if (response.length == 0) {\n            this.notificationService.showError(`City ${this.cityName} does not exist`, 'Error');\n            this.resetCoordinatesDropdown();\n          } else {\n            this.countriesAndStates = response;\n          }\n        }\n      });\n    }\n  }\n  resetCoordinatesDropdown() {\n    this.countriesInput.value = '';\n    this.cityCoordinates.lat = 0;\n    this.cityCoordinates.lon = 0;\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.NotificationService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  outputs: {\n    coordinates: \"coordinates\",\n    days: \"days\"\n  },\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"weather-container\"], [1, \"title-image\"], [\"src\", \"assets/img/logo.png\", \"alt\", \"Logo\"], [\"method\", \"get\"], [1, \"city-field\"], [\"type\", \"text\", \"name\", \"city\", \"id\", \"city\", \"placeholder\", \"City\", \"maxlength\", \"15\", \"autocomplete\", \"off\", 3, \"ngModel\", \"ngModelChange\", \"focusout\"], [1, \"countries-states-dropdown\", 3, \"click\"], [\"type\", \"text\", \"readonly\", \"\", \"name\", \"countries\", \"id\", \"countries\", 1, \"countries-input\"], [\"class\", \"options\", 4, \"ngIf\"], [1, \"submit-button\"], [\"type\", \"button\", \"value\", \"Search\", \"id\", \"search-btn\", 3, \"disabled\", \"click\"], [1, \"options\"], [\"class\", \"option\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"option\", 3, \"click\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 3)(4, \"div\", 4)(5, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.cityName = $event;\n      })(\"focusout\", function WeatherComponent_Template_input_focusout_5_listener() {\n        return ctx.getCountriesAndStates();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_div_click_6_listener() {\n        return ctx.toggleDropdown();\n      });\n      i0.ɵɵelement(7, \"input\", 7);\n      i0.ɵɵtemplate(8, WeatherComponent_ul_8_Template, 2, 1, \"ul\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 9)(10, \"input\", 10);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_input_click_10_listener() {\n        return ctx.getWeather();\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.countriesDropdown.classList.contains(\"opened\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.cityCoordinates.lat);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i5.ParseLocationPipe],\n  styles: [\".weather-container[_ngcontent-%COMP%] {\\n  margin: 0px auto;\\n  padding: 15px;\\n  border-radius: 10px;\\n  box-shadow: rgba(195, 194, 194, 0.24) 0px 3px 8px;\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: space-between;\\n}\\n.weather-container[_ngcontent-%COMP%]   .title-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 60px;\\n  height: 60px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  max-width: 600px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%] {\\n  width: 150px;\\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\\n  border-radius: 10px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  padding: 10px;\\n  border: 1px solid white;\\n  background: transparent;\\n  font-size: 18px;\\n  color: white;\\n  font-weight: 500;\\n  width: 100%;\\n  height: 100%;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder {\\n  color: white;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%] {\\n  width: 150px;\\n  height: 42.4px;\\n  border-radius: 10px;\\n  position: relative;\\n  border: 1px solid white;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 83%;\\n  height: 100%;\\n  padding: 10px;\\n  cursor: pointer;\\n  border-right: 1px solid white;\\n  outline: none;\\n  border-radius: 0px;\\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\\n  font-size: 18px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  -webkit-user-select: none;\\n          user-select: none;\\n  background: transparent;\\n  color: white;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-radius: 10px;\\n  padding: 5px;\\n  cursor: pointer;\\n  background: white;\\n  outline: none;\\n  box-shadow: 0 10px 25px rgba(124, 130, 141, 0.2);\\n  font-size: 18px;\\n  overflow: hidden;\\n  position: absolute;\\n  top: 80px;\\n  transition: all 0.7s ease;\\n  background: rgba(255, 255, 255, 0.4);\\n  backdrop-filter: blur(4.5px);\\n  -webkit-backdrop-filter: blur(4.5px);\\n  border: 1px solid rgba(255, 255, 255, 0.18);\\n  opacity: 0;\\n  transform: translateY(-50px);\\n  visibility: visible;\\n  z-index: 99;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-radius: 10px;\\n  transition: all 0.2s ease;\\n  color: #292d34;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]:not(:last-of-type) {\\n  margin-bottom: 8px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]:hover {\\n  color: white;\\n  background: #5bc5fa;\\n  box-shadow: 0 10px 25px rgba(42, 179, 248, 0.4);\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown.opened[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translateY(-30px);\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown.opened[_ngcontent-%COMP%]::before {\\n  transform: rotate(-225deg);\\n  top: 18px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]::before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  right: 6%;\\n  top: 13.5px;\\n  z-index: 9999;\\n  width: 10px;\\n  height: 10px;\\n  border: 2px solid white;\\n  border-top: transparent;\\n  border-right: transparent;\\n  transform: rotate(-45deg);\\n  pointer-events: none;\\n  transition: all 0.3s linear;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n  width: 150px;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 18px;\\n  background: transparent;\\n  color: #fff;\\n  font-weight: 500;\\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\\n  border: 1px solid white;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover {\\n  background: rgb(69, 142, 69);\\n  transition: 0.2s;\\n}\\n.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:disabled {\\n  background: #bdbbb7;\\n}\\n@media screen and (min-width: 320px) and (max-width: 521px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    align-items: center;\\n  }\\n}\\n@media screen and (min-width: 320px) and (max-width: 420px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    min-width: 95%;\\n    flex-direction: column;\\n    padding: 5px;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    margin: 10px 0 0 0;\\n    flex-direction: column;\\n    height: 160px;\\n    width: 90%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%] {\\n    width: 85%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%] {\\n    width: 85%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n    width: 50%;\\n  }\\n}\\n@media screen and (min-width: 421px) and (max-width: 520px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    min-width: 85%;\\n    flex-direction: column;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    margin: 10px 0 0 0;\\n    flex-direction: column;\\n    height: 160px;\\n    width: 80%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%] {\\n    width: 85%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%] {\\n    width: 85%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\";\\n    right: 6.5%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n    width: 50%;\\n  }\\n}\\n@media screen and (min-width: 521px) and (max-width: 3200px) {\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    margin: 10px 0 0 0;\\n    width: 80%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%] {\\n    width: 35%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%] {\\n    width: 35%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n    width: 20%;\\n  }\\n}\\n@media screen and (min-width: 820px) and (max-width: 1050px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    width: 65%;\\n  }\\n  .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\";\\n    right: 5.5%;\\n  }\\n}\\n@media screen and (min-width: 1051px) and (max-width: 1800px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    width: 45%;\\n  }\\n}\\n@media screen and (min-width: 1801px) and (max-width: 2200px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    width: 40%;\\n  }\\n}\\n@media screen and (min-width: 2201px) and (max-width: 3200px) {\\n  .weather-container[_ngcontent-%COMP%] {\\n    width: 30%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});\nexport { WeatherComponent };","map":{"version":3,"names":["EventEmitter","DOCUMENT","i0","ɵɵelementStart","ɵɵlistener","WeatherComponent_ul_8_li_1_Template_li_click_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","selectOption","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","countryAndState_r2","ɵɵtemplate","WeatherComponent_ul_8_li_1_Template","ɵɵproperty","ctx_r0","countriesAndStates","WeatherComponent","constructor","document","httpService","notificationService","cityName","cityCoordinates","lat","lon","coordinates","days","toggleDropdown","length","countriesDropdown","classList","toggle","event","countriesInput","value","currentTarget","textContent","city","find","x","state","undefined","name","country","trim","ngOnInit","querySelector","countriesOptions","querySelectorAll","ngDoCheck","resetCoordinatesDropdown","getDaysInfo","getWeather","subscribe","next","response","weatherInfo","error","console","log","complete","emit","list","showSuccess","getCountriesAndStates","toUpperCase","showError","ɵɵdirectiveInject","i1","HttpService","i2","NotificationService","selectors","outputs","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵelement","WeatherComponent_Template_input_ngModelChange_5_listener","WeatherComponent_Template_input_focusout_5_listener","WeatherComponent_Template_div_click_6_listener","WeatherComponent_ul_8_Template","WeatherComponent_Template_input_click_10_listener","contains"],"sources":["D:\\programs\\weatherapi\\src\\app\\components\\weather\\weather.component.ts","D:\\programs\\weatherapi\\src\\app\\components\\weather\\weather.component.html"],"sourcesContent":["import { Component, DoCheck, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { CityInfo } from 'src/app/models/cityInfo';\r\nimport { Coord } from 'src/app/models/coord';\r\nimport { Forecast } from 'src/app/models/forecast';\r\nimport { Forecast_List } from 'src/app/models/forecast_list';\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html',\r\n  styleUrls: ['./weather.component.scss']\r\n})\r\nexport class WeatherComponent implements OnInit, DoCheck{\r\n\r\n  cityName: string = '';\r\n  cityCoordinates: Coord = {\r\n    lat: 0,\r\n    lon: 0\r\n  };\r\n  countriesAndStates: CityInfo[] = [];\r\n  weatherInfo: Forecast;\r\n  countriesDropdown: Element;\r\n  countriesInput: HTMLInputElement;\r\n  countriesOptions: NodeListOf<Element>;\r\n\r\n  @Output() coordinates = new EventEmitter<string>();\r\n  @Output() days = new EventEmitter<Forecast_List[]>();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document,\r\n    private httpService: HttpService, \r\n    private notificationService: NotificationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.countriesDropdown = this.document.querySelector('.countries-states-dropdown');\r\n    this.countriesInput = this.document.querySelector('.countries-input');\r\n    this.countriesOptions = this.document.querySelectorAll('.option');\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if(this.cityName.length == 0){\r\n      this.resetCoordinatesDropdown();\r\n    }\r\n  };\r\n\r\n  toggleDropdown = () => {\r\n    if(this.countriesAndStates.length > 1){\r\n      this.countriesDropdown.classList.toggle('opened');\r\n    }\r\n  };\r\n\r\n  selectOption = (event) => {\r\n    this.countriesInput.value = event.currentTarget.textContent;\r\n    let city = this.countriesAndStates.find(x => {\r\n      if(x.state != undefined)\r\n        return `${x.name}, ${x.state}, ${x.country}` == this.countriesInput.value.trim()\r\n      else\r\n        return `${x.name}, ${x.country}` == this.countriesInput.value.trim() \r\n    });\r\n    [this.cityCoordinates.lat, this.cityCoordinates.lon] = [city.lat, city.lon];\r\n  };\r\n\r\n  getDaysInfo(cityCoordinates: Coord){\r\n    this.httpService\r\n      .getWeather(cityCoordinates)\r\n      .subscribe({\r\n        next: (response: Forecast) => {\r\n          this.weatherInfo = response;\r\n        },\r\n        error: error => console.log(error),\r\n        complete: () => {\r\n          this.days.emit(this.weatherInfo.list)\r\n        }\r\n      });\r\n  }\r\n\r\n  getWeather(){\r\n    this.getDaysInfo(this.cityCoordinates);\r\n    this.coordinates.emit(`${this.cityCoordinates.lat}, ${this.cityCoordinates.lon}`);\r\n    this.notificationService.showSuccess(`City ${this.cityName} is found`, 'Success');\r\n  }\r\n\r\n  getCountriesAndStates(){\r\n    if(this.cityName.length == 0){\r\n      this.countriesAndStates = [];\r\n      this.resetCoordinatesDropdown();\r\n    }else if(this.cityName.length >= 3){\r\n      this.httpService\r\n        .getCountriesAndStates(this.cityName.toUpperCase())\r\n        .subscribe({\r\n          next: (response: any) => {\r\n            if(response.length == 0){\r\n              this.notificationService.showError(`City ${this.cityName} does not exist`, 'Error');\r\n              this.resetCoordinatesDropdown();\r\n            }else{\r\n              this.countriesAndStates = response;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  resetCoordinatesDropdown(){\r\n    this.countriesInput.value = '';\r\n    this.cityCoordinates.lat = 0;\r\n    this.cityCoordinates.lon = 0;\r\n  }\r\n}\r\n\r\n","<div class=\"weather-container\">\r\n  <div class=\"title-image\">\r\n    <img src=\"assets/img/logo.png\" alt=\"Logo\">\r\n  </div>\r\n  <form method=\"get\">\r\n    <div class=\"city-field\">\r\n      <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" \r\n        [(ngModel)]=\"cityName\" maxlength=\"15\" autocomplete=\"off\" (focusout)=\"getCountriesAndStates()\">\r\n    </div>\r\n    <div class=\"countries-states-dropdown\" (click)=\"toggleDropdown()\">\r\n      <input type=\"text\" readonly class=\"countries-input\" name=\"countries\" id=\"countries\"/>\r\n      <ul class=\"options\" *ngIf=\"countriesDropdown.classList.contains('opened')\">\r\n        <li class=\"option\" *ngFor=\"let countryAndState of countriesAndStates\" (click)=\"selectOption($event)\">\r\n          {{countryAndState | parseLocation}}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"submit-button\">\r\n      <input type=\"button\" value=\"Search\" id=\"search-btn\" [disabled]=\"!cityCoordinates.lat\" (click)=\"getWeather()\">\r\n    </div>\r\n  </form>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}