{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/http.service\";\nimport * as i2 from \"../../services/notification.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../pipes/parse-location.pipe\";\nfunction WeatherComponent_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 13);\n    i0.ɵɵlistener(\"click\", function WeatherComponent_ul_8_li_1_Template_li_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.selectOption($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"parseLocation\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countryAndState_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, countryAndState_r2), \" \");\n  }\n}\nfunction WeatherComponent_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 11);\n    i0.ɵɵtemplate(1, WeatherComponent_ul_8_li_1_Template, 3, 3, \"li\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.countriesAndStates);\n  }\n}\nlet WeatherComponent = /*#__PURE__*/(() => {\n  class WeatherComponent {\n    constructor(document, httpService, notificationService) {\n      this.document = document;\n      this.httpService = httpService;\n      this.notificationService = notificationService;\n      this.cityName = '';\n      this.cityCoordinates = {\n        lat: 0,\n        lon: 0\n      };\n      this.countriesAndStates = [];\n      this.coordinates = new EventEmitter();\n      this.days = new EventEmitter();\n      this.toggleDropdown = () => {\n        if (this.countriesAndStates.length > 1) {\n          this.countriesDropdown.classList.toggle('opened');\n        }\n      };\n      this.selectOption = event => {\n        this.countriesInput.value = event.currentTarget.textContent;\n        let city = this.countriesAndStates.find(x => {\n          if (x.state != undefined) return `${x.name}, ${x.state}, ${x.country}` == this.countriesInput.value.trim();else return `${x.name}, ${x.country}` == this.countriesInput.value.trim();\n        });\n        [this.cityCoordinates.lat, this.cityCoordinates.lon] = [city.lat, city.lon];\n      };\n    }\n    ngOnInit() {\n      this.countriesDropdown = this.document.querySelector('.countries-states-dropdown');\n      this.countriesInput = this.document.querySelector('.countries-input');\n      this.countriesOptions = this.document.querySelectorAll('.option');\n    }\n    ngDoCheck() {\n      if (this.cityName.length == 0) {\n        this.resetCoordinatesDropdown();\n      }\n    }\n    getDaysInfo(cityCoordinates) {\n      this.httpService.getWeather(cityCoordinates).subscribe({\n        next: response => {\n          this.weatherInfo = response;\n        },\n        error: error => console.log(error),\n        complete: () => {\n          this.days.emit(this.weatherInfo.list);\n        }\n      });\n    }\n    getWeather() {\n      this.getDaysInfo(this.cityCoordinates);\n      this.coordinates.emit(`${this.cityCoordinates.lat}, ${this.cityCoordinates.lon}`);\n      this.notificationService.showSuccess(`City ${this.cityName} is found`, 'Success');\n    }\n    getCountriesAndStates() {\n      if (this.cityName.length == 0) {\n        this.countriesAndStates = [];\n        this.resetCoordinatesDropdown();\n      } else if (this.cityName.length >= 3) {\n        this.httpService.getCountriesAndStates(this.cityName.toUpperCase()).subscribe({\n          next: response => {\n            if (response.length == 0) {\n              this.notificationService.showError(`City ${this.cityName} does not exist`, 'Error');\n              this.resetCoordinatesDropdown();\n            } else {\n              this.countriesAndStates = response;\n            }\n          }\n        });\n      }\n    }\n    resetCoordinatesDropdown() {\n      this.countriesInput.value = '';\n      this.cityCoordinates.lat = 0;\n      this.cityCoordinates.lon = 0;\n    }\n  }\n  WeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n  WeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    outputs: {\n      coordinates: \"coordinates\",\n      days: \"days\"\n    },\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"weather-container\"], [1, \"title-image\"], [\"src\", \"assets/img/logo.png\", \"alt\", \"Logo\"], [\"method\", \"get\"], [1, \"city-field\"], [\"type\", \"text\", \"name\", \"city\", \"id\", \"city\", \"placeholder\", \"City\", \"maxlength\", \"15\", \"autocomplete\", \"off\", 3, \"ngModel\", \"ngModelChange\", \"focusout\"], [1, \"countries-states-dropdown\", 3, \"click\"], [\"type\", \"text\", \"readonly\", \"\", \"name\", \"countries\", \"id\", \"countries\", 1, \"countries-input\"], [\"class\", \"options\", 4, \"ngIf\"], [1, \"submit-button\"], [\"type\", \"button\", \"value\", \"Search\", \"id\", \"search-btn\", 3, \"disabled\", \"click\"], [1, \"options\"], [\"class\", \"option\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"option\", 3, \"click\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 3)(4, \"div\", 4)(5, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.cityName = $event;\n        })(\"focusout\", function WeatherComponent_Template_input_focusout_5_listener() {\n          return ctx.getCountriesAndStates();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_div_click_6_listener() {\n          return ctx.toggleDropdown();\n        });\n        i0.ɵɵelement(7, \"input\", 7);\n        i0.ɵɵtemplate(8, WeatherComponent_ul_8_Template, 2, 1, \"ul\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9)(10, \"input\", 10);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_input_click_10_listener() {\n          return ctx.getWeather();\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.countriesDropdown.classList.contains(\"opened\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.cityCoordinates.lat);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i5.ParseLocationPipe],\n    styles: [\".weather-container[_ngcontent-%COMP%]{margin:0 auto;padding:15px;border-radius:10px;box-shadow:#c3c2c23d 0 3px 8px;display:flex;align-items:flex-start;justify-content:space-between}.weather-container[_ngcontent-%COMP%]   .title-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:60px;height:60px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;max-width:600px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border-radius:10px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%]{width:150px;box-shadow:#0000003d 0 3px 8px;border-radius:10px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-radius:10px;padding:10px;border:1px solid white;background:transparent;font-size:18px;color:#fff;font-weight:500;width:100%;height:100%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:#fff}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]{width:150px;height:42.4px;border-radius:10px;position:relative;border:1px solid white}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:83%;height:100%;padding:10px;cursor:pointer;border-right:1px solid white;outline:none;border-radius:0;box-shadow:#0000003d 0 3px 8px;font-size:18px;position:absolute;top:0;left:0;-webkit-user-select:none;user-select:none;background:transparent;color:#fff}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]{width:100%;border-radius:10px;padding:5px;cursor:pointer;background:white;outline:none;box-shadow:0 10px 25px #7c828d33;font-size:18px;overflow:hidden;position:absolute;top:80px;transition:all .7s ease;background:rgba(255,255,255,.4);backdrop-filter:blur(4.5px);-webkit-backdrop-filter:blur(4.5px);border:1px solid rgba(255,255,255,.18);opacity:0;transform:translateY(-50px);visibility:visible;z-index:99}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]{padding:10px;border-radius:10px;transition:all .2s ease;color:#292d34}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]:not(:last-of-type){margin-bottom:8px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]:hover{color:#fff;background:#5bc5fa;box-shadow:0 10px 25px #2ab3f866}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown.opened[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]{opacity:1;visibility:visible;transform:translateY(-30px)}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown.opened[_ngcontent-%COMP%]:before{transform:rotate(-225deg);top:18px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;right:6%;top:13.5px;z-index:9999;width:10px;height:10px;border:2px solid white;border-top:transparent;border-right:transparent;transform:rotate(-45deg);pointer-events:none;transition:all .3s linear}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]{width:150px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:pointer;width:100%;padding:10px;font-size:18px;background:transparent;color:#fff;font-weight:500;box-shadow:#0000003d 0 3px 8px;border:1px solid white}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover{background:rgb(69,142,69);transition:.2s}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:disabled{background:#bdbbb7}@media screen and (min-width: 320px) and (max-width: 521px){.weather-container[_ngcontent-%COMP%]{align-items:center}}@media screen and (min-width: 320px) and (max-width: 420px){.weather-container[_ngcontent-%COMP%]{min-width:95%;flex-direction:column;padding:5px}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:10px 0 0;flex-direction:column;height:160px;width:90%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%], .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]{width:85%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]{width:50%}}@media screen and (min-width: 421px) and (max-width: 520px){.weather-container[_ngcontent-%COMP%]{min-width:85%;flex-direction:column}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:10px 0 0;flex-direction:column;height:160px;width:80%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%], .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]{width:85%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]:before{content:\\\"\\\";right:6.5%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]{width:50%}}@media screen and (min-width: 521px) and (max-width: 3200px){.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:10px 0 0;width:80%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .city-field[_ngcontent-%COMP%], .weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]{width:35%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%]{width:20%}}@media screen and (min-width: 820px) and (max-width: 1050px){.weather-container[_ngcontent-%COMP%]{width:65%}.weather-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .countries-states-dropdown[_ngcontent-%COMP%]:before{content:\\\"\\\";right:5.5%}}@media screen and (min-width: 1051px) and (max-width: 1800px){.weather-container[_ngcontent-%COMP%]{width:45%}}@media screen and (min-width: 1801px) and (max-width: 2200px){.weather-container[_ngcontent-%COMP%]{width:40%}}@media screen and (min-width: 2201px) and (max-width: 3200px){.weather-container[_ngcontent-%COMP%]{width:30%}}\"]\n  });\n  return WeatherComponent;\n})();\nexport { WeatherComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}